Elm.Util = Elm.Util || {};
Elm.Util.make = function (_elm) {
   "use strict";
   _elm.Util = _elm.Util || {};
   if (_elm.Util.values) return _elm.Util.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var unmaybe = F3(function (f,crashMsg,x) {
      var _p0 = f(x);
      if (_p0.ctor === "Just") {
            return _p0._0;
         } else {
            return _U.crashCase("Util",{start: {line: 8,column: 9},end: {line: 10,column: 44}},_p0)(crashMsg);
         }
   });
   var head = A2(unmaybe,$List.head,"empty list");
   var tail = A2(unmaybe,$List.tail,"empty list");
   return _elm.Util.values = {_op: _op,unmaybe: unmaybe,head: head,tail: tail};
};